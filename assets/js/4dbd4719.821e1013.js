(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{78:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return u})),t.d(n,"default",(function(){return p}));var a=t(3),r=t(7),o=(t(0),t(89)),i=t(96),c=t(97),l={title:"Hardware Acceleration - VAAPI",description:"Unmanic Installation - Hardware Acceleration - VAAPI",id:"hardware_accelerated_encoding_vaapi"},s={unversionedId:"advanced/hardware_accelerated_encoding_vaapi",id:"advanced/hardware_accelerated_encoding_vaapi",isDocsHomePage:!1,title:"Hardware Acceleration - VAAPI",description:"Unmanic Installation - Hardware Acceleration - VAAPI",source:"@site/docs/advanced/hardware_accelerated_encoding_vaapi.mdx",slug:"/advanced/hardware_accelerated_encoding_vaapi",permalink:"/docs/advanced/hardware_accelerated_encoding_vaapi",version:"current",sidebar:"docs",previous:{title:"Hardware Acceleration - NVENC",permalink:"/docs/advanced/hardware_accelerated_encoding_nvenc"}},u=[{value:"Overview",id:"overview",children:[]},{value:"Running Unmanic with support for VAAPI",id:"running-unmanic-with-support-for-vaapi",children:[]},{value:"Enable VAAPI in Unmanic Settings",id:"enable-vaapi-in-unmanic-settings",children:[]}],d={toc:u};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"overview"},"Overview"),Object(o.b)("p",null,"Unmanic supports hardware acceleration (HWA) of video decoding using FFMpeg. FFMpeg and Unmanic can support multiple hardware acceleration implementations such as nVidia NVENC and MediaCodec through Video Acceleration API's."),Object(o.b)("p",null,"VAAPI is a Video Acceleration API that uses libva to interface with local drivers to provide HWA."),Object(o.b)("p",null,"You can find a list of supported codecs for VAAPI ",Object(o.b)("a",{parentName:"p",href:"https://wiki.archlinux.org/index.php/Hardware_video_acceleration#Comparison_tables"},"here"),".\nBoth Intel iGPU and AMD GPU can use VAAPI."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"NOTE:\nAMD GPU requires open source driver Mesa 20.1 or higher to support hardware decoding HEVC.")),Object(o.b)("h2",{id:"running-unmanic-with-support-for-vaapi"},"Running Unmanic with support for VAAPI"),Object(o.b)("p",null,"To enable VAAPI, you will need to run Unmanic on a device that supports it."),Object(o.b)("p",null,"If you intend to use Unmanic inside a Docker container, you will also need to pass through the required devices to the container."),Object(o.b)("p",null,"An example of this is shown below:"),Object(o.b)(i.a,{defaultValue:"docker_run",values:[{label:"Docker run",value:"docker_run"},{label:"Docker-compose",value:"docker_compose"}],mdxType:"Tabs"},Object(o.b)(c.a,{value:"docker_run",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"  PUID=$(id -u)\n  PGID=$(id -g)\n\n  # CONFIG_DIR - Where you settings are saved\n  CONFIG_DIR=/config\n\n  # TZ - Your time zone\n  TZ=Pacific/Auckland\n\n  # LIBRARY_DIR - The location/locations of your library\n  LIBRARY_DIR=/library\n\n  # CACHE_DIR - A tmpfs or and folder for temporary conversion files\n  CACHE_DIR=/tmp/unmanic\n\n  # NVIDIA_VISIBLE_DEVICES - The GPUs that will be accessible to the container\n  NVIDIA_VISIBLE_DEVICES=all\n\n  docker run -ti --rm \\\n      -e PUID=${PUID} \\\n      -e PGID=${PGID} \\\n      -e TZ=${TZ} \\\n      -e NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES} \\\n      --runtime=nvidia \\\n      -p 8888:8888 \\\n      -v ${CONFIG_DIR}:/config \\\n      -v ${LIBRARY_DIR}:/library \\\n      -v ${CACHE_DIR}:/tmp/unmanic \\\n      josh5/unmanic:latest\n"))),Object(o.b)(c.a,{value:"docker_compose",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},"  # Variables that will need to be changed:\n  #     <PUID>                            -  User id for folder/file permissions\n  #     <PGID>                            -  Group id for folder/file permissions\n  #     <TZ>                              -  Your time zone, eg - Pacific/Auckland\n  #     <NVIDIA_VISIBLE_DEVICES>          -  The GPUs that will be accessible to the container\n  #                                          Options: https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/user-guide.html#gpu-enumeration\n  #     <PATH_TO_CONFIG>                  -  Path where Unmanic will store config files\n  #     <PATH_TO_LIBRARY>                 -  Path where you store the files that Unmanic will scan\n  #     <PATH_TO_ENCODE_CACHE>            -  Cache path for in-progress encoding tasks\n  #\n\n  ---\n  version: '2.4'\n  services:\n    unmanic:\n      container_name: unmanic\n      image: josh5/unmanic:latest\n      ports:\n        - 8888:8888\n      environment:\n        - PUID=<PUID>\n        - PGID=<PGID>\n        - TZ=<TZ>\n        - NVIDIA_VISIBLE_DEVICES=<NVIDIA_VISIBLE_DEVICES>\n      volumes:\n        - <PATH_TO_CONFIG>:/config\n        - <PATH_TO_LIBRARY>:/library\n        - <PATH_TO_ENCODE_CACHE>:/tmp/unmanic\n      runtime: nvidia       # For H/W transcoding using the NVENC encoder\n")))),Object(o.b)("h2",{id:"enable-vaapi-in-unmanic-settings"},"Enable VAAPI in Unmanic Settings"),Object(o.b)("p",null,"To enable the VAAPI FFMpeg encoder, you must select it in the Unmanic's settings. Follow these steps to do this."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Navigate to the ",Object(o.b)("strong",{parentName:"li"},"Video Encoding")," section of Unmanic's settings.")),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"https://raw.githubusercontent.com/Josh5/unmanic/master/docs/images/settings-video-encoding.png",alt:"Video Encoding"})),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Select your target ",Object(o.b)("strong",{parentName:"p"},"Video Codec"),".")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Then select the ",Object(o.b)("strong",{parentName:"p"},"Video Encoder"),' that ends with "_vaapi"')),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Click ",Object(o.b)("strong",{parentName:"p"},"SUBMIT"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Now switch to the ",Object(o.b)("strong",{parentName:"p"},"Advanced Options")," section of Unmanic's settings."))),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"https://raw.githubusercontent.com/Josh5/unmanic/master/docs/images/settings-advanced-options.png",alt:"Advanced Options"})),Object(o.b)("ol",{start:6},Object(o.b)("li",{parentName:"ol"},"Add the following lines:")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"-vf format=nv12|vaapi,hwupload \n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"NOTE: For more details on filtering for VAAPI encoders, see the ",Object(o.b)("a",{parentName:"p",href:"https://trac.ffmpeg.org/wiki/Hardware/VAAPI"},"FFMPEG VAAPI Docs"),"\nand the ",Object(o.b)("a",{parentName:"p",href:"https://trac.ffmpeg.org/wiki/FilteringGuide"},"FFMPEG Filtering Guide Docs"),".")),Object(o.b)("ol",{start:7},Object(o.b)("li",{parentName:"ol"},"Click ",Object(o.b)("strong",{parentName:"li"},"SUBMIT"))),Object(o.b)("p",null,"These changes will only affect any future added files. If you wish to apply this to the current Pending Tasks list, then restart Unmanic."))}p.isMDXComponent=!0},87:function(e,n,t){"use strict";function a(e){var n,t,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=a(e[n]))&&(r&&(r+=" "),r+=t);else for(n in e)e[n]&&(r&&(r+=" "),r+=n);return r}n.a=function(){for(var e,n,t=0,r="";t<arguments.length;)(e=arguments[t++])&&(n=a(e))&&(r&&(r+=" "),r+=n);return r}},89:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return m}));var a=t(0),r=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),u=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},d=function(e){var n=u(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},b=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(t),b=a,m=d["".concat(i,".").concat(b)]||d[b]||p[b]||o;return t?r.a.createElement(m,c(c({ref:n},s),{},{components:t})):r.a.createElement(m,c({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=b;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},91:function(e,n,t){"use strict";var a=t(0),r=t(92);n.a=function(){const e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},92:function(e,n,t){"use strict";var a=t(0);const r=Object(a.createContext)(void 0);n.a=r},96:function(e,n,t){"use strict";var a=t(0),r=t.n(a),o=t(91),i=t(87),c=t(56),l=t.n(c);const s=37,u=39;n.a=function(e){const{lazy:n,block:t,defaultValue:c,values:d,groupId:p,className:b}=e,{tabGroupChoices:m,setTabGroupChoices:f}=Object(o.a)(),[h,v]=Object(a.useState)(c),g=a.Children.toArray(e.children),O=[];if(null!=p){const e=m[p];null!=e&&e!==h&&d.some((n=>n.value===e))&&v(e)}const I=e=>{const n=e.target,t=O.indexOf(n),a=g[t].props.value;v(a),null!=p&&(f(p,a),setTimeout((()=>{(function(e){const{top:n,left:t,bottom:a,right:r}=e.getBoundingClientRect(),{innerHeight:o,innerWidth:i}=window;return n>=0&&r<=i&&a<=o&&t>=0})(n)||(n.scrollIntoView({block:"center",behavior:"smooth"}),n.classList.add(l.a.tabItemActive),setTimeout((()=>n.classList.remove(l.a.tabItemActive)),2e3))}),150))},j=e=>{var n;let t;switch(e.keyCode){case u:{const n=O.indexOf(e.target)+1;t=O[n]||O[0];break}case s:{const n=O.indexOf(e.target)-1;t=O[n]||O[O.length-1];break}}null===(n=t)||void 0===n||n.focus()};return r.a.createElement("div",{className:"tabs-container"},r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":t},b)},d.map((({value:e,label:n})=>r.a.createElement("li",{role:"tab",tabIndex:h===e?0:-1,"aria-selected":h===e,className:Object(i.a)("tabs__item",l.a.tabItem,{"tabs__item--active":h===e}),key:e,ref:e=>O.push(e),onKeyDown:j,onFocus:I,onClick:I},n)))),n?Object(a.cloneElement)(g.filter((e=>e.props.value===h))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},g.map(((e,n)=>Object(a.cloneElement)(e,{key:n,hidden:e.props.value!==h})))))}},97:function(e,n,t){"use strict";var a=t(0),r=t.n(a);n.a=function({children:e,hidden:n,className:t}){return r.a.createElement("div",{role:"tabpanel",hidden:n,className:t},e)}}}]);