"use strict";(self.webpackChunkunmanic_documentation=self.webpackChunkunmanic_documentation||[]).push([[339],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=c(n),f=r,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||i;return n?o.createElement(m,l(l({ref:t},p),{},{components:n})):o.createElement(m,l({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:r,l[1]=a;for(var c=2;c<i;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},611:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var o=n(3117),r=n(102),i=(n(7294),n(3905)),l=["components"],a={title:"Running a FileBot Post-processor",description:"Running a FileBot Post-processor",id:"filebot_post_processor"},s=void 0,c={unversionedId:"guides/filebot_post_processor",id:"guides/filebot_post_processor",isDocsHomePage:!1,title:"Running a FileBot Post-processor",description:"Running a FileBot Post-processor",source:"@site/docs/guides/filebot.mdx",sourceDirName:"guides",slug:"/guides/filebot_post_processor",permalink:"/docs/guides/filebot_post_processor",tags:[],version:"current",frontMatter:{title:"Running a FileBot Post-processor",description:"Running a FileBot Post-processor",id:"filebot_post_processor"},sidebar:"docs",previous:{title:"Docker-Compose SMB/CIFS mounts",permalink:"/docs/advanced/docker_compose_cifs_mounts"}},p=[{value:"Instructions:",id:"instructions",children:[{value:"1) Enable FileBot in the Unmanic container",id:"1-enable-filebot-in-the-unmanic-container",children:[],level:3},{value:"2) Install the &#39;External Post-processor Script&#39; Plugin",id:"2-install-the-external-post-processor-script-plugin",children:[],level:3},{value:"3) Configure the &#39;External Post-processor Script&#39; Plugin",id:"3-configure-the-external-post-processor-script-plugin",children:[],level:3},{value:"4) Enable the &#39;External Post-processor Script&#39; Plugin",id:"4-enable-the-external-post-processor-script-plugin",children:[],level:3}],level:2},{value:"Plugin Config Examples",id:"plugin-config-examples",children:[{value:"Rename TV Shows with the correct codec in the file name:",id:"rename-tv-shows-with-the-correct-codec-in-the-file-name",children:[{value:"Run the command for each output file created by Unmanic",id:"run-the-command-for-each-output-file-created-by-unmanic",children:[],level:5},{value:"Command or script to execute:",id:"command-or-script-to-execute",children:[],level:5},{value:"Arguments to pass to the command or script:",id:"arguments-to-pass-to-the-command-or-script",children:[],level:5}],level:3}],level:2}],u={toc:p};function d(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,o.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Follow these instructions to configure the Unmanic Docker container for running FileBot as a Post-processor function."),(0,i.kt)("h2",{id:"instructions"},"Instructions:"),(0,i.kt)("h3",{id:"1-enable-filebot-in-the-unmanic-container"},"1) Enable FileBot in the Unmanic container"),(0,i.kt)("p",null,"The Unmanic container does not have FileBot installed out-of-the-box."),(0,i.kt)("p",null,"You will need to install it into the container during container startup."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Create a file inside the container ",(0,i.kt)("inlineCode",{parentName:"li"},"/config/startup.sh")),(0,i.kt)("li",{parentName:"ol"},"Inside this file append the following contents:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'\n#  _____ _ _      _           _\n# |  ___(_) | ___| |__   ___ | |_\n# | |_  | | |/ _ \\ \'_ \\ / _ \\| __|\n# |  _| | | |  __/ |_) | (_) | |_\n# |_|   |_|_|\\___|_.__/ \\___/ \\__|\n#\n# Flag to easily disable installation on startup\nINSTALL_FILEBOT=true\nINSTALL_LEGACY_FILEBOT=false\n# Define software versions (only used for legacy installation)\nARCH=amd64  # (amd64, armhf, 1386)\nFILEBOT_VERSION=4.7.9\n\nif [[ ${INSTALL_FILEBOT} == \'true\' ]]; then\n    if ! command -v filebot &> /dev/null; then\n        # 1. Import signing keys\n        apt-get update\n        apt-get install -y --install-recommends dirmngr gnupg apt-transport-https\n        apt-key adv --fetch-keys "https://raw.githubusercontent.com/filebot/plugins/master/gpg/maintainer.pub"\n\n        # 2. Add deb repository to sources.list\n        echo "deb [arch=all] https://get.filebot.net/deb/ universal main" | tee /etc/apt/sources.list.d/filebot.list\n\n        # 3. Update package index\n        apt-get update\n\n        # 4. Install dependencies explicitly (otherwise apt-get autoremove may purge them)\n        apt-get install -y --install-recommends \\\n            default-jre \\\n            openjfx \\\n            mediainfo \\\n            libchromaprint-tools \\\n            p7zip-full \\\n            unrar\n\n        if [[ ${INSTALL_LEGACY_FILEBOT} == \'true\' ]]; then\n            # 5. Install FileBot legacy version\n            mkdir -p /config/filebot/\n            pushd /config/filebot/\n            if [[ ! -e /config/filebot/filebot_${FILEBOT_VERSION}_${ARCH}.deb ]]; then\n                curl -kSL \\\n                    -o /config/filebot/filebot_${FILEBOT_VERSION}_${ARCH}.deb \\\n                    "https://cfhcable.dl.sourceforge.net/project/filebot/filebot/FileBot_${FILEBOT_VERSION}/filebot_${FILEBOT_VERSION}_${ARCH}.deb"\n                chmod a+rw /config/filebot/filebot_${FILEBOT_VERSION}_${ARCH}.deb\n            fi\n            # apt-get install -y openjdk-8-jdk-headless   libjna-java\n            apt-get install -y /config/filebot/filebot_${FILEBOT_VERSION}_${ARCH}.deb\n\n            popd\n        else\n            # 5. Install FileBot from repo\n            apt-get install -y --install-recommends filebot\n        fi\n\n    fi\nfi\n\n')),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Restart the container")),(0,i.kt)("p",null,"During startup, this script will install FileBot if it is not already installed in this container."),(0,i.kt)("h3",{id:"2-install-the-external-post-processor-script-plugin"},"2) Install the 'External Post-processor Script' Plugin"),(0,i.kt)("p",null,"Open the plugin installer and install the plugin named 'External Post-processor Script'"),(0,i.kt)("img",{className:"screenshot",src:n(8154).Z}),(0,i.kt)("h3",{id:"3-configure-the-external-post-processor-script-plugin"},"3) Configure the 'External Post-processor Script' Plugin"),(0,i.kt)("p",null,"Once installed, click on the 'External Post-processor Script' Plugin icon."),(0,i.kt)("img",{className:"screenshot",src:n(1156).Z}),(0,i.kt)("p",null,"Click on ",(0,i.kt)("strong",{parentName:"p"},"Settings")),(0,i.kt)("img",{className:"screenshot",src:n(9923).Z}),(0,i.kt)("h3",{id:"4-enable-the-external-post-processor-script-plugin"},"4) Enable the 'External Post-processor Script' Plugin"),(0,i.kt)("p",null,"In the Plugin table, enable the configured 'External Post-processor Script' Plugin"),(0,i.kt)("img",{className:"screenshot",src:n(9945).Z}),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"plugin-config-examples"},"Plugin Config Examples"),(0,i.kt)("p",null,"Here are some examples of what FileBot can be used for in an Unmanic Post-process..."),(0,i.kt)("p",null,"References:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.filebot.net/cli.html"},"FileBot CLI")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.filebot.net/naming.html"},"FileBot Format Expressions"))),(0,i.kt)("h3",{id:"rename-tv-shows-with-the-correct-codec-in-the-file-name"},"Rename TV Shows with the correct codec in the file name:"),(0,i.kt)("h5",{id:"run-the-command-for-each-output-file-created-by-unmanic"},"Run the command for each output file created by Unmanic"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"True")),(0,i.kt)("h5",{id:"command-or-script-to-execute"},"Command or script to execute:"),(0,i.kt)("blockquote",null,(0,i.kt)("pre",{parentName:"blockquote"},(0,i.kt)("code",{parentName:"pre"},"filebot\n"))),(0,i.kt)("h5",{id:"arguments-to-pass-to-the-command-or-script"},"Arguments to pass to the command or script:"),(0,i.kt)("blockquote",null,(0,i.kt)("pre",{parentName:"blockquote"},(0,i.kt)("code",{parentName:"pre"},"--conflict skip\n-non-strict\n--db TheMovieDB::TV\n-rename \"{output_file_path}\"\n--format \"{n.upperInitial().space('.')}-{s00e00}-{t.upperInitial().space('.')}-{source}-{vf}-{vc}\"\n"))))}d.isMDXComponent=!0},9945:function(e,t,n){t.Z=n.p+"assets/images/unmanic-guide-ext-post-processor-script-enable-ce2a4a015fd89317bd99c30ec2364bbc.png"},8154:function(e,t,n){t.Z=n.p+"assets/images/unmanic-guide-ext-post-processor-script-install-bd391c565a4a4c320a71bbd05d6d66d5.png"},1156:function(e,t,n){t.Z=n.p+"assets/images/unmanic-guide-file-bot-configure1-6a36f3a96ce7a1af1dfcba26e598f0c1.png"},9923:function(e,t,n){t.Z=n.p+"assets/images/unmanic-guide-file-bot-configure2-464a6a672ab30715b1dedbdb764cf455.png"}}]);