"use strict";(self.webpackChunkunmanic_documentation=self.webpackChunkunmanic_documentation||[]).push([[936],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return p}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(t),p=o,f=d["".concat(s,".").concat(p)]||d[p]||m[p]||a;return t?r.createElement(f,i(i({ref:n},l),{},{components:t})):r.createElement(f,i({ref:n},l))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8215:function(e,n,t){var r=t(7294);n.Z=function(e){var n=e.children,t=e.hidden,o=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:o},n)}},5064:function(e,n,t){t.d(n,{Z:function(){return u}});var r=t(7294),o=t(9443);var a=function(){var e=(0,r.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},i=t(6010),c="tabItem_1uMI",s="tabItemActive_2DSg";var u=function(e){var n,t=e.lazy,o=e.block,u=e.defaultValue,l=e.values,m=e.groupId,d=e.className,p=r.Children.toArray(e.children),f=null!=l?l:p.map((function(e){return{value:e.props.value,label:e.props.label}})),v=null!=u?u:null==(n=p.find((function(e){return e.props.default})))?void 0:n.props.value,_=a(),b=_.tabGroupChoices,y=_.setTabGroupChoices,I=(0,r.useState)(v),g=I[0],h=I[1],O=[];if(null!=m){var k=b[m];null!=k&&k!==g&&f.some((function(e){return e.value===k}))&&h(k)}var P=function(e){var n=e.currentTarget,t=O.indexOf(n),r=f[t].value;h(r),null!=m&&(y(m,r),setTimeout((function(){var e,t,r,o,a,i,c,u;(e=n.getBoundingClientRect(),t=e.top,r=e.left,o=e.bottom,a=e.right,i=window,c=i.innerHeight,u=i.innerWidth,t>=0&&a<=u&&o<=c&&r>=0)||(n.scrollIntoView({block:"center",behavior:"smooth"}),n.classList.add(s),setTimeout((function(){return n.classList.remove(s)}),2e3))}),150))},C=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=O.indexOf(e.target)+1;t=O[r]||O[0];break;case"ArrowLeft":var o=O.indexOf(e.target)-1;t=O[o]||O[O.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":o},d)},f.map((function(e){var n=e.value,t=e.label;return r.createElement("li",{role:"tab",tabIndex:g===n?0:-1,"aria-selected":g===n,className:(0,i.Z)("tabs__item",c,{"tabs__item--active":g===n}),key:n,ref:function(e){return O.push(e)},onKeyDown:C,onFocus:P,onClick:P},null!=t?t:n)}))),t?(0,r.cloneElement)(p.filter((function(e){return e.props.value===g}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},p.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==g})}))))}},9443:function(e,n,t){var r=(0,t(7294).createContext)(void 0);n.Z=r},234:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return u},contentTitle:function(){return l},metadata:function(){return m},toc:function(){return d},default:function(){return f}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=t(5064),c=t(8215),s=["components"],u={title:"Docker-Compose SMB/CIFS mounts",description:"Unmanic Installation - Docker-Compose with CIFS mounts",id:"docker_compose_cifs_mounts"},l=void 0,m={unversionedId:"advanced/docker_compose_cifs_mounts",id:"advanced/docker_compose_cifs_mounts",isDocsHomePage:!1,title:"Docker-Compose SMB/CIFS mounts",description:"Unmanic Installation - Docker-Compose with CIFS mounts",source:"@site/docs/advanced/docker_compose_cifs_mounts.mdx",sourceDirName:"advanced",slug:"/advanced/docker_compose_cifs_mounts",permalink:"/docs/advanced/docker_compose_cifs_mounts",tags:[],version:"current",frontMatter:{title:"Docker-Compose SMB/CIFS mounts",description:"Unmanic Installation - Docker-Compose with CIFS mounts",id:"docker_compose_cifs_mounts"},sidebar:"docs",previous:{title:"Docker Hardware Acceleration - VAAPI",permalink:"/docs/advanced/hardware_accelerated_encoding_vaapi"}},d=[{value:"Overview",id:"overview",children:[]}],p={toc:d};function f(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Mounting a remote Windows share is possible with Docker, but requires a little more configuration."),(0,a.kt)(i.Z,{defaultValue:"docker_run",values:[{label:"Docker run",value:"docker_run"},{label:"Docker-compose",value:"docker_compose"}],mdxType:"Tabs"},(0,a.kt)(c.Z,{value:"docker_run",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  PUID=$(id -u)\n  PGID=$(id -g)\n\n  # CONFIG_DIR - Where you settings are saved\n  CONFIG_DIR=/config\n\n  # CACHE_DIR - A tmpfs or and folder for temporary conversion files\n  CACHE_DIR=/tmp/unmanic\n  \n  # CIFS Mount params\n  REMOTE_IP=192.168.0.20\n  PATH_TO_LIBRARY=/library\n  USERNAME=user\n  PASSWORD=password\n\n  # First create the docker volume mounting the CIFS remote share\n  docker volume create \\\n      --driver local \\\n      --opt type=cifs \\\n      --opt device=//${REMOTE_IP}${PATH_TO_LIBRARY} \\\n      --opt o=username=${USERNAME},password=${PASSWORD},vers=3.0,uid=${PUID},gid=${PGID} \\\n      --name cifs_mount\n\n  # Now create the docker container using the created CIFS volume\n  docker run -ti --rm \\\n      -e PUID=${PUID} \\\n      -e PGID=${PGID} \\\n      -p 8888:8888 \\\n      -v ${CONFIG_DIR}:/config \\\n      -v cifs_mount:/library \\\n      -v ${CACHE_DIR}:/tmp/unmanic \\\n      josh5/unmanic:latest\n"))),(0,a.kt)(c.Z,{value:"docker_compose",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"  # Variables that will need to be changed:\n  #     <PUID>                            -  User id for folder/file permissions\n  #     <PGID>                            -  Group id for folder/file permissions\n  #     <PATH_TO_CONFIG>                  -  Path where Unmanic will store config files\n  #     <PATH_TO_ENCODE_CACHE>            -  Cache path for in-progress encoding tasks\n  #     <REMOTE_IP>                       -  Remote IP address of CIFS mount\n  #     <PATH_TO_LIBRARY>                 -  Path in remote machine to be mounted as your library \n  #     <USERNAME>                        -  Remote mount username\n  #     <PASSWORD>                        -  Remote mount password\n  #\n\n  ---\n  version: '2.4'\n  services:\n    unmanic:\n      container_name: unmanic\n      image: josh5/unmanic:latest\n      ports:\n        - 8888:8888\n      environment:\n        - PUID=<PUID>\n        - PGID=<PGID>\n      volumes:\n        - <PATH_TO_CONFIG>:/config\n        - cifs_mount:/library\n        - <PATH_TO_ENCODE_CACHE>:/tmp/unmanic\n\n  volumes:\n    cifs_mount:\n      driver: local\n      driver_opts:\n        type: cifs    \n        device: //<REMOTE_IP>/<PATH_TO_LIBRARY>\n        o: \"username=<USERNAME>,password=<PASSWORD>,vers=3.0,uid=<PUID>,gid=<PGID>\"\n\n\n")))))}f.isMDXComponent=!0},6010:function(e,n,t){function r(e){var n,t,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=r(e[n]))&&(o&&(o+=" "),o+=t);else for(n in e)e[n]&&(o&&(o+=" "),o+=n);return o}function o(){for(var e,n,t=0,o="";t<arguments.length;)(e=arguments[t++])&&(n=r(e))&&(o&&(o+=" "),o+=n);return o}t.d(n,{Z:function(){return o}})}}]);