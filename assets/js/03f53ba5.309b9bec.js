"use strict";(self.webpackChunkunmanic_documentation=self.webpackChunkunmanic_documentation||[]).push([[3546],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(n),m=i,h=s["".concat(p,".").concat(m)]||s[m]||f[m]||o;return n?r.createElement(h,a(a({ref:t},u),{},{components:n})):r.createElement(h,a({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4862:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const o={title:"Creating a Pull Request to the Official Repository",id:"creating_a_pull_request"},a=void 0,l={unversionedId:"development/plugin_repos/creating_a_pull_request",id:"development/plugin_repos/creating_a_pull_request",title:"Creating a Pull Request to the Official Repository",description:"Submissions are encouraged for the plugin repository. However it is your responsibility to ensure that your plugin is compatible and meets all requirements prior to submission.",source:"@site/docs/development/plugin_repos/opening_plugin_pr_to_official_repo.mdx",sourceDirName:"development/plugin_repos",slug:"/development/plugin_repos/creating_a_pull_request",permalink:"/docs/development/plugin_repos/creating_a_pull_request",draft:!1,tags:[],version:"current",frontMatter:{title:"Creating a Pull Request to the Official Repository",id:"creating_a_pull_request"},sidebar:"docs",previous:{title:"Creating Your Own Repository",permalink:"/docs/development/plugin_repos/creating_your_own_repo"},next:{title:"Plugin Manager CLI",permalink:"/docs/development/plugin_manager_cli"}},p={},c=[{value:"Creating a New PR:",id:"creating-a-new-pr",level:2},{value:"1) Pull latest changes from official branch",id:"1-pull-latest-changes-from-official-branch",level:3},{value:"2) Create new PR branch from official",id:"2-create-new-pr-branch-from-official",level:3},{value:"3) Merge in the source files from your master branch",id:"3-merge-in-the-source-files-from-your-master-branch",level:3},{value:"4) Push to new branch and then open a PR",id:"4-push-to-new-branch-and-then-open-a-pr",level:3},{value:"5) Open the PR",id:"5-open-the-pr",level:3},{value:"Updating existing PR:",id:"updating-existing-pr",level:2},{value:"1) Pull latest changes from official branch",id:"1-pull-latest-changes-from-official-branch-1",level:3},{value:"2) Checkout CLEAN PR branch from official",id:"2-checkout-clean-pr-branch-from-official",level:3},{value:"3) Follow steps &gt; 3 from Creating a New PR: above",id:"3-follow-steps--3-from-creating-a-new-pr-above",level:3}],u={toc:c};function s(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Submissions are encouraged for the plugin repository. However it is your responsibility to ensure that your plugin is compatible and meets all requirements prior to submission.\nOnce a plugin is merged into the official repository, maintenance of that plugin will fall to the maintainer of the official repository."),(0,i.kt)("p",null,"If you wish to merge your plugin into the official repository, follow these steps"),(0,i.kt)("hr",null),(0,i.kt)("h1",{id:"opening-pr"},"Opening PR"),(0,i.kt)("p",null,"These instructions assume you have ",(0,i.kt)("a",{parentName:"p",href:"creating_your_own_repo"},"forked the official repository")," and wish to merge in your own plugin."),(0,i.kt)("p",null,"These instructions also assume that you have configured your locally cloned repo with a remote ",(0,i.kt)("inlineCode",{parentName:"p"},"upstream")," pointing to the official repository."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"git remote add upstream https://github.com/Unmanic/unmanic-plugins.git \n")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"It is a good idea to set the variable ",(0,i.kt)("inlineCode",{parentName:"p"},"$plugin_id")," before starting these commands"),(0,i.kt)("p",{parentName:"admonition"},"Eg:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre"},"plugin_id=path_ignore\nplugin_version=0.0.1\n"))),(0,i.kt)("h2",{id:"creating-a-new-pr"},"Creating a New PR:"),(0,i.kt)("h3",{id:"1-pull-latest-changes-from-official-branch"},"1) Pull latest changes from official branch"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"git checkout official\ngit pull upstream official\n")),(0,i.kt)("h3",{id:"2-create-new-pr-branch-from-official"},"2) Create new PR branch from official"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"git checkout -b pr-${plugin_id}\n")),(0,i.kt)("h3",{id:"3-merge-in-the-source-files-from-your-master-branch"},"3) Merge in the source files from your master branch"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"git read-tree --prefix=source/${plugin_id} -u master:source/${plugin_id}\n")),(0,i.kt)("h3",{id:"4-push-to-new-branch-and-then-open-a-pr"},"4) Push to new branch and then open a PR"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'git commit -m "[${plugin_id}] ${plugin_version}"\ngit push -f origin pr-${plugin_id}\n')),(0,i.kt)("h3",{id:"5-open-the-pr"},"5) Open the PR"),(0,i.kt)("p",null,"Open the PR from this new branch of your forked repo to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unmanic/unmanic-plugins/tree/official"},"Unmanic plugins official branch"),"."),(0,i.kt)("h2",{id:"updating-existing-pr"},"Updating existing PR:"),(0,i.kt)("h3",{id:"1-pull-latest-changes-from-official-branch-1"},"1) Pull latest changes from official branch"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"git checkout official\ngit pull upstream official\n")),(0,i.kt)("h3",{id:"2-checkout-clean-pr-branch-from-official"},"2) Checkout CLEAN PR branch from official"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"git branch -D pr-${plugin_id}\ngit checkout -b pr-${plugin_id}\n")),(0,i.kt)("h3",{id:"3-follow-steps--3-from-creating-a-new-pr-above"},"3) Follow steps > 3 from ",(0,i.kt)("a",{parentName:"h3",href:"#creating-a-new-pr"},"Creating a New PR:")," above"),(0,i.kt)("p",null,"Continue following steps 3+ from the ",(0,i.kt)("em",{parentName:"p"},"New PR:")," steps above."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Take note of the force push in step 4. This is done so that we can squash the changes for the PR.")))}s.isMDXComponent=!0}}]);