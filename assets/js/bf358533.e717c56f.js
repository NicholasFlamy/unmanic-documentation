"use strict";(self.webpackChunkunmanic_documentation=self.webpackChunkunmanic_documentation||[]).push([[3071],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),f=i,d=u["".concat(c,".").concat(f)]||u[f]||g[f]||a;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6137:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const a={title:"Managing the Task List",description:"Unmanic Configuration - Managing the Task List",id:"managing_task_list"},o=void 0,s={unversionedId:"configuration/libraries/managing_task_list",id:"configuration/libraries/managing_task_list",title:"Managing the Task List",description:"Unmanic Configuration - Managing the Task List",source:"@site/docs/configuration/libraries/managing_task_lists.mdx",sourceDirName:"configuration/libraries",slug:"/configuration/libraries/managing_task_list",permalink:"/docs/configuration/libraries/managing_task_list",draft:!1,tags:[],version:"current",frontMatter:{title:"Managing the Task List",description:"Unmanic Configuration - Managing the Task List",id:"managing_task_list"},sidebar:"docs",previous:{title:"Optimise File Testing",permalink:"/docs/configuration/libraries/file_testing"},next:{title:"Workers",permalink:"/docs/configuration/workers_settings"}},c={},l=[],p={toc:l};function u(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"When Unmanic finds a file that needs processing, it will add it to the ",(0,i.kt)("a",{parentName:"p",href:"/docs/dashboard/pending_tasks"},"pending tasks")," list."),(0,i.kt)("p",null,"Under the ",(0,i.kt)("strong",{parentName:"p"},"Library")," section of Unmanic's settings, you have the option to configure if this task list is cleared each\ntime Unmanic starts."),(0,i.kt)("img",{className:"screenshot",style:{width:"400px"},src:n(1840).Z}),(0,i.kt)("p",null,"If selected, the Pending Tasks queue will be cleared whenever Unmanic starts."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"For larger libraries it is recommended to disable this option and preserve your Pending Tasks queue between Unmanic restarts.")))}u.isMDXComponent=!0},1840:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/unmanic-settings-library-pending-tasks-53378f41b6df8fc3478d2dbe048a42d8.png"}}]);