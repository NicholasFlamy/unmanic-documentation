"use strict";(self.webpackChunkunmanic_documentation=self.webpackChunkunmanic_documentation||[]).push([[826],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(t),m=a,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return t?r.createElement(f,o(o({ref:n},u),{},{components:t})):r.createElement(f,o({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=p;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8215:function(e,n,t){var r=t(7294);n.Z=function(e){var n=e.children,t=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}},5064:function(e,n,t){t.d(n,{Z:function(){return d}});var r=t(7294),a=t(9443);var i=function(){var e=(0,r.useContext)(a.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},o=t(6010),c="tabItem_1uMI",l="tabItemActive_2DSg";var s=37,u=39;var d=function(e){var n=e.lazy,t=e.block,a=e.defaultValue,d=e.values,p=e.groupId,m=e.className,f=i(),v=f.tabGroupChoices,h=f.setTabGroupChoices,g=(0,r.useState)(a),k=g[0],I=g[1],A=r.Children.toArray(e.children),b=[];if(null!=p){var w=v[p];null!=w&&w!==k&&d.some((function(e){return e.value===w}))&&I(w)}var _=function(e){var n=e.currentTarget,t=b.indexOf(n),r=d[t].value;I(r),null!=p&&(h(p,r),setTimeout((function(){var e,t,r,a,i,o,c,s;(e=n.getBoundingClientRect(),t=e.top,r=e.left,a=e.bottom,i=e.right,o=window,c=o.innerHeight,s=o.innerWidth,t>=0&&i<=s&&a<=c&&r>=0)||(n.scrollIntoView({block:"center",behavior:"smooth"}),n.classList.add(l),setTimeout((function(){return n.classList.remove(l)}),2e3))}),150))},y=function(e){var n,t;switch(e.keyCode){case u:var r=b.indexOf(e.target)+1;t=b[r]||b[0];break;case s:var a=b.indexOf(e.target)-1;t=b[a]||b[b.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},m)},d.map((function(e){var n=e.value,t=e.label;return r.createElement("li",{role:"tab",tabIndex:k===n?0:-1,"aria-selected":k===n,className:(0,o.Z)("tabs__item",c,{"tabs__item--active":k===n}),key:n,ref:function(e){return b.push(e)},onKeyDown:y,onFocus:_,onClick:_},t)}))),n?(0,r.cloneElement)(A.filter((function(e){return e.props.value===k}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},A.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==k})}))))}},9443:function(e,n,t){var r=(0,t(7294).createContext)(void 0);n.Z=r},1079:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return p},default:function(){return f}});var r=t(2122),a=t(9756),i=(t(7294),t(3905)),o=t(5064),c=t(8215),l=["components"],s={title:"Hardware Acceleration - VAAPI",description:"Unmanic Installation - Hardware Acceleration - VAAPI",id:"hardware_accelerated_encoding_vaapi"},u=void 0,d={unversionedId:"advanced/hardware_accelerated_encoding_vaapi",id:"advanced/hardware_accelerated_encoding_vaapi",isDocsHomePage:!1,title:"Hardware Acceleration - VAAPI",description:"Unmanic Installation - Hardware Acceleration - VAAPI",source:"@site/docs/advanced/hardware_accelerated_encoding_vaapi.mdx",sourceDirName:"advanced",slug:"/advanced/hardware_accelerated_encoding_vaapi",permalink:"/docs/advanced/hardware_accelerated_encoding_vaapi",version:"current",frontMatter:{title:"Hardware Acceleration - VAAPI",description:"Unmanic Installation - Hardware Acceleration - VAAPI",id:"hardware_accelerated_encoding_vaapi"},sidebar:"docs",previous:{title:"Hardware Acceleration - NVENC",permalink:"/docs/advanced/hardware_accelerated_encoding_nvenc"}},p=[{value:"Overview",id:"overview",children:[]},{value:"Running Unmanic with support for VAAPI",id:"running-unmanic-with-support-for-vaapi",children:[]},{value:"Enable VAAPI in Unmanic Settings",id:"enable-vaapi-in-unmanic-settings",children:[]}],m={toc:p};function f(e){var n=e.components,t=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Unmanic supports hardware acceleration (HWA) of video decoding using FFmpeg. FFmpeg and Unmanic can support multiple hardware acceleration implementations such as nVidia NVENC and MediaCodec through Video Acceleration API's."),(0,i.kt)("p",null,"VAAPI is a Video Acceleration API that uses libva to interface with local drivers to provide HWA."),(0,i.kt)("p",null,"You can find a list of supported codecs for VAAPI ",(0,i.kt)("a",{parentName:"p",href:"https://wiki.archlinux.org/index.php/Hardware_video_acceleration#Comparison_tables"},"here"),".\nBoth Intel iGPU and AMD GPU can use VAAPI."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"NOTE:\nAMD GPU requires open source driver Mesa 20.1 or higher to support hardware decoding HEVC.")),(0,i.kt)("h2",{id:"running-unmanic-with-support-for-vaapi"},"Running Unmanic with support for VAAPI"),(0,i.kt)("p",null,"To enable VAAPI, you will need to run Unmanic on a device that supports it."),(0,i.kt)("p",null,"If you intend to use Unmanic inside a Docker container, you will also need to pass through the required devices to the container."),(0,i.kt)("p",null,"An example of this is shown below:"),(0,i.kt)(o.Z,{defaultValue:"docker_run",values:[{label:"Docker run",value:"docker_run"},{label:"Docker-compose",value:"docker_compose"}],mdxType:"Tabs"},(0,i.kt)(c.Z,{value:"docker_run",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"  PUID=$(id -u)\n  PGID=$(id -g)\n\n  # CONFIG_DIR - Where you settings are saved\n  CONFIG_DIR=/config\n\n  # TZ - Your time zone\n  TZ=Pacific/Auckland\n\n  # LIBRARY_DIR - The location/locations of your library\n  LIBRARY_DIR=/library\n\n  # CACHE_DIR - A tmpfs or and folder for temporary conversion files\n  CACHE_DIR=/tmp/unmanic\n\n  # NVIDIA_VISIBLE_DEVICES - The GPUs that will be accessible to the container\n  NVIDIA_VISIBLE_DEVICES=all\n\n  docker run -ti --rm \\\n      -e PUID=${PUID} \\\n      -e PGID=${PGID} \\\n      --device=/dev/dri \\\n      -p 8888:8888 \\\n      -v ${CONFIG_DIR}:/config \\\n      -v ${LIBRARY_DIR}:/library \\\n      -v ${CACHE_DIR}:/tmp/unmanic \\\n      josh5/unmanic:latest\n"))),(0,i.kt)(c.Z,{value:"docker_compose",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"  # Variables that will need to be changed:\n  #     <PUID>                            -  User id for folder/file permissions\n  #     <PGID>                            -  Group id for folder/file permissions\n  #     <NVIDIA_VISIBLE_DEVICES>          -  The GPUs that will be accessible to the container\n  #                                          Options: https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/user-guide.html#gpu-enumeration\n  #     <PATH_TO_CONFIG>                  -  Path where Unmanic will store config files\n  #     <PATH_TO_LIBRARY>                 -  Path where you store the files that Unmanic will scan\n  #     <PATH_TO_ENCODE_CACHE>            -  Cache path for in-progress encoding tasks\n  #\n\n  ---\n  version: '2.4'\n  services:\n    unmanic:\n      container_name: unmanic\n      image: josh5/unmanic:latest\n      ports:\n        - 8888:8888\n      environment:\n        - PUID=<PUID>\n        - PGID=<PGID>\n      volumes:\n        - <PATH_TO_CONFIG>:/config\n        - <PATH_TO_LIBRARY>:/library\n        - <PATH_TO_ENCODE_CACHE>:/tmp/unmanic\n      devices:\n        - /dev/dri:/dev/dri       # For H/W transcoding using the VAAPI encoder\n")))),(0,i.kt)("h2",{id:"enable-vaapi-in-unmanic-settings"},"Enable VAAPI in Unmanic Settings"),(0,i.kt)("p",null,"To enable the VAAPI FFmpeg encoder, you must select it in the Unmanic's settings. Follow these steps to do this."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Navigate to the ",(0,i.kt)("strong",{parentName:"li"},"Video Encoding")," section of Unmanic's settings.")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/Josh5/unmanic/master/docs/images/settings-video-encoding.png",alt:"Video Encoding"})),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Select your target ",(0,i.kt)("strong",{parentName:"p"},"Video Codec"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Then select the ",(0,i.kt)("strong",{parentName:"p"},"Video Encoder"),' that ends with "_vaapi"')),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Click ",(0,i.kt)("strong",{parentName:"p"},"SUBMIT"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Now switch to the ",(0,i.kt)("strong",{parentName:"p"},"Advanced Options")," section of Unmanic's settings."))),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/Josh5/unmanic/master/docs/images/settings-advanced-options.png",alt:"Advanced Options"})),(0,i.kt)("ol",{start:6},(0,i.kt)("li",{parentName:"ol"},"Add the following lines:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"-vf format=nv12|vaapi,hwupload \n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"NOTE: For more details on filtering for VAAPI encoders, see the ",(0,i.kt)("a",{parentName:"p",href:"https://trac.ffmpeg.org/wiki/Hardware/VAAPI"},"FFmpeg VAAPI Docs"),"\nand the ",(0,i.kt)("a",{parentName:"p",href:"https://trac.ffmpeg.org/wiki/FilteringGuide"},"FFmpeg Filtering Guide Docs"),".")),(0,i.kt)("ol",{start:7},(0,i.kt)("li",{parentName:"ol"},"Click ",(0,i.kt)("strong",{parentName:"li"},"SUBMIT"))),(0,i.kt)("p",null,"These changes will only affect any future added files. If you wish to apply this to the current Pending Tasks list, then restart Unmanic."))}f.isMDXComponent=!0},6010:function(e,n,t){function r(e){var n,t,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=r(e[n]))&&(a&&(a+=" "),a+=t);else for(n in e)e[n]&&(a&&(a+=" "),a+=n);return a}function a(){for(var e,n,t=0,a="";t<arguments.length;)(e=arguments[t++])&&(n=r(e))&&(a&&(a+=" "),a+=n);return a}t.d(n,{Z:function(){return a}})}}]);