"use strict";(self.webpackChunkunmanic_documentation=self.webpackChunkunmanic_documentation||[]).push([[415],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),p=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(u.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=p(t),d=a,g=s["".concat(u,".").concat(d)]||s[d]||m[d]||l;return t?r.createElement(g,i(i({ref:n},c),{},{components:t})):r.createElement(g,i({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=s;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},1195:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return c},default:function(){return s}});var r=t(3117),a=t(102),l=(t(7294),t(3905)),i=["components"],o={title:"Plugin Manager CLI",id:"plugin_manager_cli"},u=void 0,p={unversionedId:"development/plugin_manager_cli",id:"development/plugin_manager_cli",isDocsHomePage:!1,title:"Plugin Manager CLI",description:"Unmanic has a built-in Plugin Manager CLI.",source:"@site/docs/development/plugin_manager_cli.mdx",sourceDirName:"development",slug:"/development/plugin_manager_cli",permalink:"/docs/development/plugin_manager_cli",tags:[],version:"current",frontMatter:{title:"Plugin Manager CLI",id:"plugin_manager_cli"},sidebar:"docs",previous:{title:"Creating a Pull Request to the Official Repository",permalink:"/docs/development/plugin_repos/creating_a_pull_request"},next:{title:"Docker Hardware Acceleration - NVENC",permalink:"/docs/advanced/hardware_accelerated_encoding_nvenc"}},c=[],m={toc:c};function s(e){var n=e.components,t=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Unmanic has a built-in ",(0,l.kt)("strong",{parentName:"p"},"Plugin Manager CLI"),".\nTo access this, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"unmanic --manage_plugins\n")),(0,l.kt)("p",null,"This will not run the main Unmanic service and may be run while already\nrunning the Unmanic service without any interference."),(0,l.kt)("p",null,"You will be presented with the main menu"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ unmanic --manage_plugins\nStarting migrations\nThere is nothing to migrate\nUnmanicLogger - SETUP LOGGER\n[?] What would you like to do?: Test installed plugins\n > Test installed plugins\n   List installed plugins\n   Create new plugin\n   Reload plugin from disk\n   Remove plugin\n   Exit\n")),(0,l.kt)("p",null,"From here you may select on of the available options."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Test installed plugins"),(0,l.kt)("td",{parentName:"tr",align:null},"Executes tests against all runners of all currently installed Plugins")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"List installed plugins"),(0,l.kt)("td",{parentName:"tr",align:null},"Lists all currently installed Plugins")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Create new plugin"),(0,l.kt)("td",{parentName:"tr",align:null},"Executes a guided process to generate a new Plugin template")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Reload plugin from disk"),(0,l.kt)("td",{parentName:"tr",align:null},"Reload all Plugin data into the database and update any requirements")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Remove plugin"),(0,l.kt)("td",{parentName:"tr",align:null},"Delete the Plugin directory and all contents and remove the Plugin from the database")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Exit"),(0,l.kt)("td",{parentName:"tr",align:null},"Exits the Plugin Manager CLI")))))}s.isMDXComponent=!0}}]);