"use strict";(self.webpackChunkunmanic_documentation=self.webpackChunkunmanic_documentation||[]).push([[4008],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),h=i,m=u["".concat(l,".").concat(h)]||u[h]||d[h]||r;return n?a.createElement(m,o(o({ref:t},p),{},{components:n})):a.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},2023:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const r={title:"Basic Authentication with Nginx",description:"Basic Authentication with Nginx",id:"basic_auth_nginx.md"},o=void 0,s={unversionedId:"guides/basic_auth_nginx.md",id:"guides/basic_auth_nginx.md",title:"Basic Authentication with Nginx",description:"Basic Authentication with Nginx",source:"@site/docs/guides/basic_auth_nginx.md",sourceDirName:"guides",slug:"/guides/basic_auth_nginx.md",permalink:"/docs/guides/basic_auth_nginx.md",draft:!1,tags:[],version:"current",frontMatter:{title:"Basic Authentication with Nginx",description:"Basic Authentication with Nginx",id:"basic_auth_nginx.md"}},l={},c=[{value:"Requirements",id:"requirements",level:2},{value:"Password File",id:"password-file",level:2},{value:"Nginx Config",id:"nginx-config",level:2},{value:"Activate Config",id:"activate-config",level:3}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Unmanic can use basic authentication when connecting to another instance. Authentication itself however isn't built into Unmanic. Instead a reverse proxy like Nginx must be used to handle the authentication."),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("p",null,"A running Unmanic instance is required. We will put this instance behind basic authentication.",(0,i.kt)("br",{parentName:"p"}),"\n","Install Nginx on your system. On Debian, the package name is ",(0,i.kt)("inlineCode",{parentName:"p"},"nginx"),".",(0,i.kt)("br",{parentName:"p"}),"\n",'To create the file containing our users for basic auth, we need the program "htpasswd". On Debian it is contained in the package ',(0,i.kt)("inlineCode",{parentName:"p"},"apache2-utils")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"sudo apt install nginx apache2-utils\n")),(0,i.kt)("h2",{id:"password-file"},"Password File"),(0,i.kt)("p",null,"We will be creating a password file under the path ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/apache2/.htpasswd"),(0,i.kt)("br",{parentName:"p"}),"\n","To create the file and a first user run this command.",(0,i.kt)("br",{parentName:"p"}),"\n","You will be prompted to enter a password."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"If a file already exists in that path it will be overwritten!  ")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"sudo htpasswd -c /etc/apache2/.htpasswd [USER]\n")),(0,i.kt)("p",null,"If you want to add more users to the same file, use the command without the ",(0,i.kt)("inlineCode",{parentName:"p"},"-c")," option."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"sudo htpasswd /etc/apache2/.htpasswd [USER]\n")),(0,i.kt)("p",null,"The permissions on the .htpasswd file should look something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"-rw-r--r-- 1 root root 43 Jun  1 17:46 /etc/apache2/.htpasswd\n")),(0,i.kt)("h2",{id:"nginx-config"},"Nginx Config"),(0,i.kt)("p",null,"Now we'll be going over the nginx config.",(0,i.kt)("br",{parentName:"p"}),"\n","On Debian, site configurations go into ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/nginx/sites-available/"),(0,i.kt)("br",{parentName:"p"}),"\n","Create a new file under that directory"),(0,i.kt)("p",null,"Open the file in your preferred editor and insert the following content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-nginx"},'server {\n    server_name [YOUR DOMAIN NAME];\n\n    # Security / XSS Mitigation Headers\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-XSS-Protection "1; mode=block";\n    add_header X-Content-Type-Options "nosniff";\n\n\n    client_max_body_size [MAX FILE SIZE];\n\n    location / {\n        # Proxy main traffic\n        proxy_pass http://[UNMANIC IP];\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header X-Forwarded-Protocol $scheme;\n        proxy_set_header X-Forwarded-Host $http_host;\n\n        # Proxy WebSocket connection\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection "Upgrade";\n\n        # Basic Authentication\n        auth_basic           "Unmanic";\n        auth_basic_user_file [HTPASSWORD FILE];\n    }\n\n    listen *:80;\n\n    #listen *:443 ssl http2;\n    #ssl_certificate_key /etc/certificate/key.pem;\n    #ssl_certificate /etc/certificate/cert.pem;\n}\n')),(0,i.kt)("p",null,"You'll have to change some of the settings from the file above to fit your setup."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"server_name: If available, set this to your domain name. You can remove this line if you don't use a domain."),(0,i.kt)("li",{parentName:"ol"},"client_max_body_size: Only necessary for linked installations. Set this value higher than the largest video file you want to transcode. ",(0,i.kt)("strong",{parentName:"li"},"If this value is too small, files won't be transferred and fail to transcode"),"\nYou can enter a value like ",(0,i.kt)("inlineCode",{parentName:"li"},"50G")," for 50 GBs or completely disable this check with ",(0,i.kt)("inlineCode",{parentName:"li"},"client_max_body_size 0;")),(0,i.kt)("li",{parentName:"ol"},"proxy_pass: If you run Nginx and Unmanic on the same server with default settings this will be ",(0,i.kt)("inlineCode",{parentName:"li"},"http://127.0.0.1:8888"),". Else, change the ip address and port number to match with your setup"),(0,i.kt)("li",{parentName:"ol"},'auth_basic_user_file: Insert the path of your "htpasswd" File. If you followed this guide, it should be ',(0,i.kt)("inlineCode",{parentName:"li"},"/etc/apache2/.htpasswd"))),(0,i.kt)("p",null,"Optionally, you can also set up SSL certificates and uncomment the ",(0,i.kt)("inlineCode",{parentName:"p"},"listen *:443 ssl http2;")," and the two below. Modify them to point to your certificate file and key and make sure to remove the ",(0,i.kt)("inlineCode",{parentName:"p"},"listen *:80;")," above."),(0,i.kt)("h3",{id:"activate-config"},"Activate Config"),(0,i.kt)("p",null,"To activate the configuration file, symlink it to ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/nginx/sites-enabled/")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"sudo ln -s /etc/nginx/sites-available/[UNMANIC CONFIG] /etc/nginx/sites-enabled/\n")),(0,i.kt)("p",null,"Remove the default Nginx configuration file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"sudo rm /etc/nginx/sites-enabled/default\n")),(0,i.kt)("p",null,"Reload Nginx to install the new configuration file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"sudo systemctl reload nginx\n")),(0,i.kt)("p",null,"If everything went well, you should be seeing a login prompt now if you try to access your server through the web browser."))}u.isMDXComponent=!0}}]);